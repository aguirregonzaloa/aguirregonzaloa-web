---
import Global from "../icons/Global.astro";

const LANGUAGES = [{name:"Spanish", url:"/", label:"sp"}, {name:"English", url:"/en",label:"en"}];
---

<div class="relative ml-1 mr-1">
  <button
    id="language-toggle-btn"
    class="appearance-none border-none flex hover:scale-125 transition"
  >
    <!-- <span class="sr-only">Elige el tema</span> -->
    <!-- <SunIcon id="light" class="language-toggle-icon size-5 transition-all" />
    <MoonIcon
      id="dark"
      class="language-toggle-icon absolute size-5 transition-all"
    />
    <SystemIcon
      id="system"
      class="language-toggle-icon absolute size-5 transition-all"
    /> -->
    <Global id="language" class="language-toggle-icon size-5 transition-all" />
  </button>
  <div
    id="languages-menu"
    class="absolute hidden scale-80 top-8 right-0 text-sm p-1 min-w-[8rem] rounded-md border border-gray-100 bg-white/90 dark:bg-gray-900/90 dark:border-gray-500/20 shadow-[0_3px_10px_rgb(0,0,0,0.2)] backdrop-blur-md"
  >
    <ul>
      {
        LANGUAGES.map((language) => (
        <a   class="relative block px-2 py-2 transition hover:text-yellow-500 dark:hover:text-yellow-400 hover:bg-neutral-400/40 dark:hover:bg-gray-500/50 rounded-sm"
          aria-label={language.label} href={language.url} target="_blank"> 
          {language.name}
          </a>
        ))
      }
    </ul>
  </div>
</div>

<style>
  #languages-menu.open {
    display: inline;
    animation: scale-up-center 0.15s cubic-bezier(0.25, 0.46, 0.45, 0.94) both;
  }

  @keyframes scale-up-center {
    from {
      transform: scale(0.8);
      opacity: 0;
    }

    to {
      transform: scale(1);
      opacity: 1;
    }
  }
</style>

<script is:inline>
  const languagesMenu = document.getElementById("languages-menu");

   document.addEventListener("click", () => languagesMenu.classList.remove("open"))

  document
    .getElementById("language-toggle-btn")
    .addEventListener("click", (e) => {
      e.stopPropagation();
      const isClosed = !languagesMenu.classList.contains("open");
      languagesMenu.classList[isClosed ? "add" : "remove"]("open");
    });

  // document.querySelectorAll(".languages-menu-option").forEach((element) => {
  //   element.addEventListener("click", (e) => {
  //     localStorage.setItem("language", e.target.innerText.toLowerCase().trim());
  //     updatelanguage();
  //   });
  // });
</script>
